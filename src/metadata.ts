/* eslint-disable */
export default async () => {
    const t = {
        ["./common/dto/abstract.dto"]: await import("./common/dto/abstract.dto"),
        ["./constants/language-code"]: await import("./constants/language-code"),
        ["./constants/role-type"]: await import("./constants/role-type"),
        ["./modules/user/user.entity"]: await import("./modules/user/user.entity"),
        ["./modules/organization/entities/organization.entity"]: await import("./modules/organization/entities/organization.entity"),
        ["./modules/network/entities/network.entity"]: await import("./modules/network/entities/network.entity"),
        ["./modules/config/entities/config.entity"]: await import("./modules/config/entities/config.entity"),
        ["./modules/user/user-settings.entity"]: await import("./modules/user/user-settings.entity"),
        ["./constants/order"]: await import("./constants/order"),
        ["./common/dto/page-meta.dto"]: await import("./common/dto/page-meta.dto"),
        ["./modules/user/dtos/user.dto"]: await import("./modules/user/dtos/user.dto"),
        ["./modules/auth/dto/token-payload.dto"]: await import("./modules/auth/dto/token-payload.dto"),
        ["./modules/patient/entities/patient.entity"]: await import("./modules/patient/entities/patient.entity"),
        ["./modules/patient/entities/patient-translation.entity"]: await import("./modules/patient/entities/patient-translation.entity"),
        ["./modules/patient/entities/patient-registration-status.entity"]: await import("./modules/patient/entities/patient-registration-status.entity"),
        ["./modules/patient/dto/patient-response.dto"]: await import("./modules/patient/dto/patient-response.dto"),
        ["./modules/auth/dto/login-payload.dto"]: await import("./modules/auth/dto/login-payload.dto"),
        ["./modules/organization/dto/create-organization.dto"]: await import("./modules/organization/dto/create-organization.dto")
    };
    return { "@nestjs/swagger/plugin": { "models": [[import("./common/dto/abstract.dto"), { "AbstractDto": { id: { required: true, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, translations: { required: false, type: () => [t["./common/dto/abstract.dto"].AbstractTranslationDto] } }, "AbstractTranslationDto": {} }], [import("./common/abstract.entity"), { "AbstractEntity": { id: { required: true, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, translations: { required: false } }, "AbstractTranslationEntity": { languageCode: { required: true, enum: t["./constants/language-code"].LanguageCode } } }], [import("./modules/user/dtos/user.dto"), { "UserDto": { firstName: { required: false, type: () => String, nullable: true }, lastName: { required: false, type: () => String, nullable: true }, username: { required: true, type: () => String }, role: { required: false, enum: t["./constants/role-type"].RoleType }, email: { required: false, type: () => String, nullable: true }, avatar: { required: false, type: () => String, nullable: true }, phone: { required: false, type: () => String, nullable: true }, isActive: { required: false, type: () => Boolean } } }], [import("./modules/user/user-settings.entity"), { "UserSettingsEntity": { isEmailVerified: { required: false, type: () => Boolean }, isPhoneVerified: { required: false, type: () => Boolean }, userId: { required: false, type: () => String }, user: { required: false, type: () => t["./modules/user/user.entity"].UserEntity } } }], [import("./modules/config/entities/config.entity"), { "Configuration": { id: { required: true, type: () => String }, category: { required: true, type: () => String }, key: { required: true, type: () => String }, value: { required: true, type: () => Object }, metadata: { required: true, type: () => ({ isOverridden: { required: false, type: () => Boolean }, parentValue: { required: false, type: () => Object }, locales: { required: false, type: () => Object }, description: { required: false, type: () => String } }) }, networkId: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, departmentId: { required: true, type: () => String }, userId: { required: true, type: () => String }, isActive: { required: true, type: () => Boolean }, organization: { required: true, type: () => t["./modules/organization/entities/organization.entity"].Organization }, network: { required: true, type: () => t["./modules/network/entities/network.entity"].Network }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, createdBy: { required: true, type: () => String }, updatedBy: { required: true, type: () => String } } }], [import("./modules/organization/entities/organization.entity"), { "Organization": { id: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, networkId: { required: true, type: () => String }, network: { required: true, type: () => t["./modules/network/entities/network.entity"].Network }, configurations: { required: true, type: () => [t["./modules/config/entities/config.entity"].Configuration] }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./modules/network/entities/network.entity"), { "Network": { id: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, organizations: { required: true, type: () => [t["./modules/organization/entities/organization.entity"].Organization] }, configurations: { required: true, type: () => [t["./modules/config/entities/config.entity"].Configuration] }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./modules/user/user.entity"), { "UserEntity": { firstName: { required: true, type: () => String, nullable: true }, lastName: { required: true, type: () => String, nullable: true }, role: { required: true, enum: t["./constants/role-type"].RoleType }, email: { required: true, type: () => String, nullable: true }, password: { required: true, type: () => String, nullable: true }, phone: { required: true, type: () => String, nullable: true }, fullName: { required: true, type: () => String }, settings: { required: false, type: () => t["./modules/user/user-settings.entity"].UserSettingsEntity }, organizationId: { required: false, type: () => String }, organization: { required: false, type: () => t["./modules/organization/entities/organization.entity"].Organization }, networkId: { required: false, type: () => String }, network: { required: false, type: () => t["./modules/network/entities/network.entity"].Network } } }], [import("./modules/user/dtos/create-settings.dto"), { "CreateSettingsDto": { isEmailVerified: { required: false, type: () => Boolean }, isPhoneVerified: { required: false, type: () => Boolean } } }], [import("./common/dto/page-options.dto"), { "PageOptionsDto": { page: { required: false, type: () => Number, default: 1, minimum: 1 }, limit: { required: false, type: () => Number, default: 10, minimum: 1, maximum: 100 }, order: { required: true, enum: t["./constants/order"].Order }, take: { required: true, type: () => Number }, q: { required: false, type: () => String } } }], [import("./common/dto/page-meta.dto"), { "PageMetaDto": { page: { required: true, type: () => Number }, take: { required: true, type: () => Number }, itemCount: { required: true, type: () => Number }, pageCount: { required: true, type: () => Number }, hasPreviousPage: { required: true, type: () => Boolean }, hasNextPage: { required: true, type: () => Boolean } } }], [import("./common/dto/page.dto"), { "PageDto": { data: { required: true }, meta: { required: true, type: () => t["./common/dto/page-meta.dto"].PageMetaDto } } }], [import("./modules/user/dtos/users-page-options.dto"), { "UsersPageOptionsDto": {} }], [import("./modules/auth/dto/user-register.dto"), { "UserRegisterDto": { firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, password: { required: true, type: () => String }, phone: { required: false, type: () => String }, role: { required: true, enum: t["./constants/role-type"].RoleType }, organizationId: { required: true, type: () => String }, networkId: { required: true, type: () => String } } }], [import("./modules/auth/dto/token-payload.dto"), { "TokenPayloadDto": { expiresIn: { required: true, type: () => Number }, accessToken: { required: true, type: () => String } } }], [import("./modules/auth/dto/user-login.dto"), { "UserLoginDto": { email: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./modules/auth/dto/login-payload.dto"), { "LoginPayloadDto": { user: { required: true, type: () => t["./modules/user/dtos/user.dto"].UserDto }, token: { required: true, type: () => t["./modules/auth/dto/token-payload.dto"].TokenPayloadDto } } }], [import("./modules/patient/entities/patient-translation.entity"), { "PatientTranslation": { id: { required: true, type: () => String }, language: { required: true, type: () => String }, patient: { required: true, type: () => t["./modules/patient/entities/patient.entity"].Patient }, nameGiven: { required: true, type: () => String }, nameFamily: { required: true, type: () => String }, preferredName: { required: true, type: () => String } } }], [import("./modules/patient/entities/patient-registration-status.entity"), { "PatientRegistrationStatus": { statusId: { required: true, type: () => Number }, statusCode: { required: true, type: () => String }, statusName: { required: true, type: () => String }, statusDescription: { required: false, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, patients: { required: false, type: () => [t["./modules/patient/entities/patient.entity"].Patient] } } }], [import("./modules/patient/entities/patient.entity"), { "Patient": { upid: { required: true, type: () => String }, abha: { required: false, type: () => String }, mrn: { required: false, type: () => String }, identifier: { required: false, type: () => Object }, namePrefix: { required: false, type: () => String }, nameGiven: { required: true, type: () => String }, nameMiddle: { required: false, type: () => String }, nameFamily: { required: true, type: () => String }, nameSuffix: { required: false, type: () => String }, preferredName: { required: false, type: () => String }, birthDate: { required: true, type: () => Date, nullable: true }, deathDate: { required: false, type: () => Date, nullable: true }, genderIdentity: { required: false, enum: t["./modules/patient/entities/patient.entity"].GenderIdentity }, biologicalSex: { required: false, enum: t["./modules/patient/entities/patient.entity"].BiologicalSex }, preferredPronouns: { required: false, type: () => String }, address: { required: false, type: () => Object }, contact: { required: false, type: () => Object, nullable: true }, phoneVerified: { required: true, type: () => Boolean }, phoneVerifiedAt: { required: false, type: () => Date }, emailVerified: { required: true, type: () => Boolean }, emailVerifiedAt: { required: false, type: () => Date }, preferredLanguage: { required: false, type: () => String }, interpreterRequired: { required: true, type: () => Boolean }, maritalStatus: { required: false, type: () => String }, race: { required: false, type: () => Object }, ethnicity: { required: false, type: () => String }, emergencyContacts: { required: false, type: () => Object }, active: { required: true, type: () => Boolean }, preferences: { required: false, type: () => Object }, bloodType: { required: false, type: () => String }, organDonor: { required: false, type: () => Boolean }, advanceDirectives: { required: false, type: () => Object }, statusId: { required: false, type: () => Number }, createdBy: { required: true, type: () => String }, updatedBy: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, version: { required: true, type: () => Number }, creator: { required: true, type: () => t["./modules/user/user.entity"].UserEntity }, updater: { required: true, type: () => t["./modules/user/user.entity"].UserEntity }, translations: { required: true, type: () => [t["./modules/patient/entities/patient-translation.entity"].PatientTranslation] }, registrationStatus: { required: false, type: () => t["./modules/patient/entities/patient-registration-status.entity"].PatientRegistrationStatus }, organization: { required: true, type: () => t["./modules/organization/entities/organization.entity"].Organization }, network: { required: true, type: () => t["./modules/network/entities/network.entity"].Network } } }], [import("./modules/patient/dto/create-patient.dto"), { "AddressDto": { line1: { required: true, type: () => String }, line2: { required: false, type: () => String }, city: { required: true, type: () => String }, state: { required: true, type: () => String }, postalCode: { required: true, type: () => String }, country: { required: false, type: () => String } }, "ContactDTO": { email: { required: false, type: () => String }, phone: { required: false, type: () => String }, mobilePhone: { required: false, type: () => String } }, "CreateContactDTO": { phone: { required: false, type: () => String }, mobilePhone: { required: false, type: () => String } }, "EmergencyContactDTO": { name: { required: true, type: () => String }, relationship: { required: true, type: () => String }, phone: { required: true, type: () => String }, email: { required: false, type: () => String } }, "CreatePatientDto": { abha: { required: false, type: () => String }, mrn: { required: false, type: () => String }, identifier: { required: false, type: () => Object }, namePrefix: { required: false, type: () => String }, nameGiven: { required: true, type: () => String }, nameMiddle: { required: false, type: () => String }, nameFamily: { required: true, type: () => String }, nameSuffix: { required: false, type: () => String }, preferredName: { required: false, type: () => String }, birthDate: { required: true, type: () => Date }, deathDate: { required: false, type: () => Date }, genderIdentity: { required: false, enum: t["./modules/patient/entities/patient.entity"].GenderIdentity }, biologicalSex: { required: false, enum: t["./modules/patient/entities/patient.entity"].BiologicalSex }, preferredPronouns: { required: false, type: () => String }, address: { required: false, type: () => Object }, contact: { required: false, type: () => Object }, preferredLanguage: { required: false, type: () => String }, interpreterRequired: { required: false, type: () => Boolean }, maritalStatus: { required: false, type: () => String }, race: { required: false, type: () => Object }, ethnicity: { required: false, type: () => String }, emergencyContacts: { required: false, type: () => Object }, preferredPharmacy: { required: false, type: () => String, format: "uuid" }, primaryCareProvider: { required: false, type: () => String, format: "uuid" }, active: { required: false, type: () => Boolean }, preferences: { required: false, type: () => Object }, bloodType: { required: false, type: () => String }, organDonor: { required: false, type: () => Boolean }, advanceDirectives: { required: false, type: () => Object }, statusId: { required: false, type: () => Number }, createdBy: { required: true, type: () => String, format: "uuid" }, updatedBy: { required: true, type: () => String, format: "uuid" } } }], [import("./modules/patient/dto/update-patient.dto"), { "UpdatePatientDto": { statusId: { required: false, type: () => Number } } }], [import("./modules/patient/dto/patient-response.dto"), { "PatientRegistrationStatusDto": { statusId: { required: true, type: () => Number }, statusCode: { required: true, type: () => String }, statusName: { required: true, type: () => String }, statusDescription: { required: false, type: () => String } }, "PatientResponseDto": { networkId: { required: true, type: () => String }, upid: { required: true, type: () => String }, abha: { required: false, type: () => String }, mrn: { required: false, type: () => String }, identifier: { required: false, type: () => Object }, namePrefix: { required: false, type: () => String }, nameGiven: { required: true, type: () => String }, nameMiddle: { required: false, type: () => String }, nameFamily: { required: true, type: () => String }, nameSuffix: { required: false, type: () => String }, preferredName: { required: false, type: () => String }, birthDate: { required: true, type: () => Date, nullable: true }, deathDate: { required: false, type: () => Date, nullable: true }, genderIdentity: { required: false, enum: t["./modules/patient/entities/patient.entity"].GenderIdentity }, biologicalSex: { required: false, enum: t["./modules/patient/entities/patient.entity"].BiologicalSex }, preferredPronouns: { required: false, type: () => String }, address: { required: false, type: () => Object }, contact: { required: false, type: () => Object, nullable: true }, preferredLanguage: { required: false, type: () => String }, interpreterRequired: { required: true, type: () => Boolean }, maritalStatus: { required: false, type: () => String }, race: { required: false, type: () => Object }, ethnicity: { required: false, type: () => String }, emergencyContacts: { required: false, type: () => Object }, preferredPharmacy: { required: false, type: () => String }, primaryCareProvider: { required: false, type: () => String }, active: { required: true, type: () => Boolean }, preferences: { required: false, type: () => Object }, bloodType: { required: false, type: () => String }, organDonor: { required: false, type: () => Boolean }, advanceDirectives: { required: false, type: () => Object }, statusId: { required: false, type: () => Number }, registrationStatus: { required: false, type: () => t["./modules/patient/dto/patient-response.dto"].PatientRegistrationStatusDto }, createdBy: { required: true, type: () => String }, updatedBy: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, version: { required: true, type: () => Number } } }], [import("./modules/config/dto/create-config.dto"), { "CreateConfigDto": { category: { required: true, type: () => String }, key: { required: true, type: () => String }, value: { required: true, type: () => Object }, metadata: { required: false, type: () => ({ isOverridden: { required: false, type: () => Boolean }, parentValue: { required: false, type: () => Object }, locales: { required: false, type: () => Object }, description: { required: false, type: () => String } }) }, networkId: { required: false, type: () => String, format: "uuid" }, organizationId: { required: false, type: () => String, format: "uuid" }, departmentId: { required: false, type: () => String, format: "uuid" }, userId: { required: false, type: () => String, format: "uuid" } } }], [import("./modules/config/dto/update-config.dto"), { "UpdateConfigDto": { value: { required: false, type: () => Object }, metadata: { required: false, type: () => ({ isOverridden: { required: false, type: () => Boolean }, parentValue: { required: false, type: () => Object }, locales: { required: false, type: () => Object }, description: { required: false, type: () => String } }) } } }], [import("./modules/config/dto/query-config.dto"), { "QueryConfigDto": { category: { required: false, type: () => String }, key: { required: false, type: () => String }, networkId: { required: false, type: () => String, format: "uuid" }, organizationId: { required: false, type: () => String, format: "uuid" }, departmentId: { required: false, type: () => String, format: "uuid" }, userId: { required: false, type: () => String, format: "uuid" }, includeInactive: { required: false, type: () => Boolean }, locale: { required: false, type: () => String } } }], [import("./modules/organization/dto/create-organization.dto"), { "CreateOrganizationDto": {} }], [import("./modules/verification/dto/initiate-phone-verification.dto"), { "InitiatePhoneVerificationDto": { patientId: { required: false, type: () => String, format: "uuid" }, phoneNumber: { required: false, type: () => String }, countryCode: { required: false, type: () => String } } }], [import("./modules/verification/dto/validate-phone-otp.dto"), { "ValidatePhoneOtpDto": { patientId: { required: false, type: () => String, format: "uuid" }, phoneNumber: { required: true, type: () => String }, countryCode: { required: false, type: () => String }, otp: { required: true, type: () => String } } }], [import("./common/dto/create-translation.dto"), { "CreateTranslationDto": { languageCode: { required: true, enum: t["./constants/language-code"].LanguageCode }, text: { required: true, type: () => String } } }], [import("./modules/network/dto/create-network.dto"), { "CreateNetworkDto": {} }], [import("./modules/network/dto/update-network.dto"), { "UpdateNetworkDto": {} }], [import("./modules/organization/dto/update-organization.dto"), { "UpdateOrganizationDto": {} }], [import("./modules/verification/dto/initiate-email-verification.dto"), { "InitiateEmailVerificationDto": { patientId: { required: false, type: () => String, format: "uuid" }, email: { required: true, type: () => String, format: "email" } } }], [import("./modules/patient/dto/update-patient-status.dto"), { "UpdatePatientStatusDto": { statusId: { required: true, type: () => Number } } }], [import("./modules/verification/dto/validate-email-verification.dto"), { "ValidateEmailVerificationDto": { patientId: { required: false, type: () => String, format: "uuid" }, email: { required: true, type: () => String, format: "email" }, code: { required: true, type: () => String } } }]], "controllers": [[import("./modules/user/user.controller"), { "UserController": { "admin": {}, "getUsers": {}, "getUser": { type: t["./modules/user/dtos/user.dto"].UserDto } } }], [import("./modules/auth/auth.controller"), { "AuthController": { "userLogin": { type: t["./modules/auth/dto/login-payload.dto"].LoginPayloadDto }, "userRegister": { type: t["./modules/user/dtos/user.dto"].UserDto }, "getCurrentUser": { type: t["./modules/user/dtos/user.dto"].UserDto } } }], [import("./modules/health-checker/health-checker.controller"), { "HealthCheckerController": { "check": { type: Object } } }], [import("./modules/patient/patient.controller"), { "PatientController": { "create": { type: t["./modules/patient/dto/patient-response.dto"].PatientResponseDto }, "findAll": { type: [t["./modules/patient/dto/patient-response.dto"].PatientResponseDto] }, "findOne": { type: t["./modules/patient/dto/patient-response.dto"].PatientResponseDto }, "findByUpid": { type: t["./modules/patient/dto/patient-response.dto"].PatientResponseDto }, "update": { type: t["./modules/patient/dto/patient-response.dto"].PatientResponseDto }, "remove": {}, "deactivate": {}, "activate": { type: t["./modules/patient/dto/patient-response.dto"].PatientResponseDto }, "getContact": { type: Object }, "updateContact": { type: t["./modules/patient/entities/patient.entity"].Patient }, "deleteContact": { type: t["./modules/patient/entities/patient.entity"].Patient } } }], [import("./modules/config/config.controller"), { "ConfigController": { "create": { type: t["./modules/config/entities/config.entity"].Configuration }, "findAll": { type: [t["./modules/config/entities/config.entity"].Configuration] }, "findByCategory": { type: [t["./modules/config/entities/config.entity"].Configuration] }, "findOne": { type: t["./modules/config/entities/config.entity"].Configuration }, "update": { type: t["./modules/config/entities/config.entity"].Configuration }, "remove": {}, "resetToParent": { type: t["./modules/config/entities/config.entity"].Configuration }, "updateUPIDFormat": {}, "getUPIDFormat": { type: Object } } }], [import("./modules/organization/organization.controller"), { "OrganizationController": { "create": { type: t["./modules/organization/dto/create-organization.dto"].CreateOrganizationDto }, "findAll": { type: String }, "findOne": { type: String }, "remove": { type: String } } }], [import("./modules/verification/verification.controller"), { "VerificationController": { "initiatePhoneVerification": { type: Object }, "validatePhoneOTP": { type: Object } } }], [import("./modules/network/network.controller"), { "NetworkController": { "getNetworkInfo": {} } }]] } };
};